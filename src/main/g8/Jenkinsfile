# Default pipeline should go here.
pipeline {
  agent {
    label 'sbt-slave'
  }

  environment {
    // Ensure that build scripts recognise the environment they are running within
    CI = 'jenkins'
  }

  stages {
    steps {
      stage('Environment') {
        ansiColor('xterm') {
          script {
            sh "sbt checkExternalBuildTools"
          }
        }
      }
    }

    stage('Compile') {
      steps {
        ansiColor('xterm') {
          script {
            sh "sbt clean compile test:compile it:compile doc"
          }
        }
      }
    }

    stage('Verification') {
      steps {
        ansiColor('xterm') {
          script {
            // TODO: CO-???: enable sbt-header for integration tests
            sh "sbt headerCheck test:headerCheck scalastyle test:scalastyle it:scalastyle sbt:scalafmt::test scalafmt::test test:scalafmt::test it:scalafmt::test"
          }
        }
      }
    }

    stage('Test') {
      steps {
        ansiColor('xterm') {
          script {
            // Ensure that coverage reporting doesn't fail when generating reports
            // - the report aggregation step will generate necessary failures!
            sh "sbt coverage test 'set coverageMinimum := 0' coverageReport"
            sh "sbt coverageAggregate"
          }
        }
      }
    }

    stage('IntegrationTest') {
      steps {
        ansiColor('xterm') {
          script {
            // TODO: CO-???: ensure coverage is enabled for it:test
            // TODO: CO-???: rewrite so that we just call it:test here
            try {
              sh "sbt coverageOff dockerComposeUp"
              sh "sbt it:test"
            } finally {
              sh "sbt dockerComposeDown dockerRemove"
            }
          }
        }
      }
    }

    stage('Publish') {
      steps {
        ansiColor('xterm') {
          sh "sbt createRelease"
        }
      }
    }
  }
}
